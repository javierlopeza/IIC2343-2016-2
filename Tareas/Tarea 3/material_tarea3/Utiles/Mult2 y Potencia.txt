DATA:
// Parametros multiplicacion
factor1 	5
factor2 	2
producto 	0
var1 		0
var2 		0
parcial 	0
i 			0

// Parametros potencia
base						2
exponente 					3
resultado_potencia			0
ipot						0

CODE:

JMP main

multiplicar:
	// Limpiamos
	MOV A,0
	MOV (var1),A
	MOV (var2),A
	MOV (parcial),A
	MOV (i),A
	MOV (producto),A

	// Verificar Factores Distintos de 0
	MOV A,(factor1)
	CMP A,0
	JEQ endmultiplicar

	JMP initmult

	mult:
		MOV A,0
		MOV (parcial),A
		MOV (i),A

	startmult:
		MOV A,(parcial)
		ADD A,(var2)
		MOV (parcial),A
		MOV A,(i)
		ADD A,1
		MOV (i),A
		MOV B,(var1)
		CMP A,B
		JLT startmult
		RET

	initmult:
		MOV A,(factor1)
		MOV (var1),A
		MOV A,(factor2)
		MOV (var2),A
		CALL mult
		MOV A, (producto)
		ADD A,(parcial)
		MOV (producto),A
		JMP endmultiplicar

	endmultiplicar:
		RET// Multiplica los valores en las direcciones factor1 y factor2 y guarda el resultado en producto.

potencia:
	// Limpiamos
	MOV A,0
	MOV (factor1),A
	MOV (factor2),A
	MOV (producto),A
	MOV (var1),A
	MOV (var2),A
	MOV (parcial),A
	MOV (ipot),A
	MOV (resultado_potencia),A

	MOV A,(base)

	MOV B,(exponente)
	MOV (ipot),B

	// --- CASOS EXCEPCIONALES ---
	// Verificar base distinta de 1
	CMP A,1
	JEQ baseuno

	// Verificar exponente distinto de 0
	MOV A,B
	CMP A,0
	JEQ expcero

	// Verificar exponente distinto de 1
	CMP A,1
	JEQ expuno
	// -------------------------------

	// Pasamos los factores de la multiplicacion a la subrutina
	MOV A,(base)
	MOV (factor1),A
	MOV (factor2),A

	// Subrutina multiplicacion master

	multmaster:
		// Verificar factores distintos de 0
		MOV A,(factor1)
		CMP A,0
		JEQ endpot

		JMP initmultpot

	multpot:
		MOV A,0
		MOV (parcial),A
		MOV (i),A

	startmultpot:
		MOV A,(parcial)
		ADD A,(var2)
		MOV (parcial),A
		MOV A,(i)
		ADD A,1
		MOV (i),A
		MOV B,(var1)
		CMP A,B
		JLT startmultpot
		RET

	initmultpot:
		MOV A,(factor1)
		MOV (var1),A
		MOV A,(factor2)
		MOV (var2),A
		CALL multpot
		MOV A,(producto)
		ADD A,(parcial)
		MOV (producto),A
		MOV (resultado_potencia),A
	
	endmultpot:
		// Verificamos si la operacion de potencia esta terminada
		MOV A,(ipot)
		SUB A,1
		MOV (ipot),A
		CMP A,1
		JNE continuarpot	// Queda por potenciar
		CMP A,1
		JEQ endpot			// Potencia terminada

	// Preparamos los registros y factores para nueva multiplicacion
	continuarpot:
		MOV A,(base)
		MOV (factor1),A
		MOV A,(resultado_potencia)
		MOV (factor2),A
		MOV A,0
		MOV (producto),A
		JMP multmaster

	// --- Jumps de Casos Excepcionales ---
	baseuno:
		MOV A,1
		MOV (resultado_potencia),A
		JMP endpot

	expcero:
		MOV A,1
		MOV (resultado_potencia),A
		JMP endpot

	expuno:
		MOV A,(base)
		MOV (resultado_potencia),A
		JMP endpot
		// ----------------------

	endpot:
		MOV A,(resultado_potencia)		// Cargamos el resultado de la potencia en el registro A

		RET


main:
	CALL multiplicar
	CALL potencia
	CALL multiplicar
